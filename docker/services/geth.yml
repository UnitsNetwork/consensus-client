services:
  geth-init:
    container_name: geth-init
    image: ethereum/client-go:stable
    entrypoint: /bin/sh -c
    command:
      - |
        if [ ! -d /root/.ethereum/geth ] ; then
          geth init /tmp/genesis.json
        else
          echo geth already initialized
        fi
    volumes:
      - ../genesis-${NETWORK}.json:/tmp/genesis.json
      - ../data/geth:/root/.ethereum
  geth:
    container_name: geth
    image: ethereum/client-go:stable
    pull_policy: always
    stop_grace_period: 5m
    restart: unless-stopped
    command:
      - --config=/etc/config.toml
      - --syncmode=full
      - --verbosity=4
      - --http
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.api=eth,web3,txpool,net,debug,engine
      - --http.corsdomain=*
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.api=eth,web3,txpool,net,debug
      - --ws.rpcprefix=/
      - --ws.origins=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/etc/secrets/jwtsecret
      - --nodekey=/etc/secrets/p2p-key
    environment:
      - GETH_MINER_GASLIMIT=${GAS_LIMIT}
      - GETH_NETWORKID=${NETWORK_ID}
    logging:
      driver: local
      options:
        max-size: 1g
        max-file: 5
    volumes:
      - ../data/secrets:/etc/secrets:ro
      - ../data/geth:/root/.ethereum
      - ../geth-${NETWORK}:/etc/config.toml
    ports:
      - '30303:30303/tcp'
      - '30303:30303/udp'
    healthcheck:
      test: 'wget -qO /dev/null --header "content-type: application/json" --post-data {\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}  http://127.0.0.1:8545'
      interval: 10s
      timeout: 1s
      retries: 10
