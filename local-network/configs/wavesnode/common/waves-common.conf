# Waves node settings
waves {
  directory = /var/lib/waves
  db.directory = /var/lib/waves/data
  db.store-state-hashes = true

  # Blockchain settings
  blockchain {
    type = CUSTOM
    custom {
      address-scheme-character = D
      functionality {
        feature-check-blocks-period = 1
        blocks-for-feature-activation = 1
        min-asset-info-update-interval = 7
        generation-balance-depth-from-50-to-1000-after-height = 0
        last-time-based-fork-parameter = 1492128000000
        reset-effective-balances-at-height = 4650
        block-version-3-after-height = 0
        max-complexity-in-block = 10000000000
        double-features-periods-after-height = 1000000000
        max-transaction-time-back-offset = 120m
        max-transaction-time-forward-offset = 90m
        lease-expiration = 1000000

        min-block-time = 12000ms
        delay-delta = 3

        pre-activated-features = {
          1 = 0,
          2 = 0,
          3 = 0,
          4 = 0,
          5 = 0,
          6 = 0,
          7 = 0,
          8 = 0,
          9 = 0,
          10 = 0,
          11 = 0,
          12 = 0,
          13 = 0,
          14 = 0,
          15 = 0,
          16 = 0,
          17 = 0,
          18 = 0,
          19 = 0,
          20 = 0,
          21 = 0,
          22 = 0
        }
        dao-address = "3FVGizGxjdi8m4e8WKjbwtzg4rdiiUGkLCu"
        xtn-buyback-address = "3FZQMZsyypqDUk2r5katP1AUChe7Uzc9dC4"
        xtn-buyback-reward-period = 20
      }
      rewards {
        term = 100000
        term-after-capped-reward-feature = 5
        initial = 600000000
        min-increment = 50000000
        voting-interval = 1
      }
      include "genesis.conf"
    }
  }

  miner {
    enable = yes
    micro-block-interval = 200ms
    max-transactions-in-key-block = 0
    max-transactions-in-micro-block = 500
    min-micro-block-age = 0ms
    quorum = 0
    interval-after-last-block-then-generation-is-allowed = 120d
  }

  rewards {
    desired = 500000000
  }

  # P2P Network settings
  network {
    node-name = "waves-"${NODE_NUMBER}
    break-idle-connections-timeout = 10m

    # Network address
    bind-address = "0.0.0.0"
    port = 6863

    known-peers = [
      "wavesnode-1:6863"
      "wavesnode-2:6863"
    ]

    max-single-host-connections = 6
    enable-peers-exchange = no
    enable-blacklisting = no

    max-inbound-connections = 70
    max-outbound-connections = 70

    traffic-logger {
      # Codes of transmitted messages to ignore. See MessageSpec.messageCode
      ignore-tx-messages = [] # BlockMessageSpec, TransactionsMessageSpec

      # Codes of received messages to ignore. See MessageSpec.messageCode
      ignore-rx-messages = [] # TransactionsMessageSpec
    }
  }

  # P2P Network settings
  l2 {
    chain-contract = "3FdaanzgX4roVgHevhq8L8q42E7EZL9XTQr"

    execution-client-address = "http://"${EXECUTION_CLIENT}":8551"
    network {
      bind-address = "0.0.0.0"
      port = 6865
      known-peers = [
        "wavesnode-1:6865"
        "wavesnode-2:6865"
      ]
      enable-peers-exchange = off
      peers-broadcast-interval = 1d
    }

    mining-enable = yes
  }

  rest-api {
    # Enable/disable node's REST API
    enable = yes

    # Network address to bind to
    bind-address = "0.0.0.0"

    # Port to listen to REST API requests
    port = 6869

    # Hash of API key string
    api-key-hash = "2etchmPPsitn9VMShPjACKjWZ1M2sZLG7tsZqj9qEaRx" # hashSecure of "testapi"

    api-key-different-host = yes
    evaluate-script-complexity-limit = 52000
    minimum-peers = 0
  }

  # Nodes synchronization settings
  synchronization {
    # Timeout to receive all requested blocks
    synchronization-timeout = 12s
    utx-synchronizer {
      max-threads = 8
    }
  }

  extensions = [
    units.ConsensusClient
  ]

  wallet.password = ""
}

kamon.enable = no
metrics.enable = no
