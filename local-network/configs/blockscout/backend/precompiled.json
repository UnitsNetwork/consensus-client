[
  {
    "name": "Bridge",
    "address": "0x0000000000000000000000000000000000006a7e",
    "compiler": "v0.8.26+commit.8a97fa7a",
    "bytecode": "0x60806040526004361061006e575f3560e01c806396f396c31161004c57806396f396c3146100e3578063c4a4326d14610105578063e984df0e1461011d578063fccc281314610131575f80fd5b806339dd5d1b146100725780637157405a146100b957806378338413146100ce575b5f80fd5b34801561007d575f80fd5b506100a161008c36600461059e565b5f6020819052908152604090205461ffff1681565b60405161ffff90911681526020015b60405180910390f35b3480156100c4575f80fd5b506100a161040081565b6100e16100dc3660046105b5565b61015c565b005b3480156100ee575f80fd5b506100f761044e565b6040519081526020016100b0565b348015610110575f80fd5b506100f76402540be40081565b348015610128575f80fd5b506100f7610468565b34801561013c575f80fd5b506101445f81565b6040516001600160a01b0390911681526020016100b0565b61016c6402540be40060016105fc565b34101561017834610478565b61019061018b6402540be40060016105fc565b610478565b6040516020016101a1929190610630565b604051602081830303815290604052906101d75760405162461bcd60e51b81526004016101ce9190610688565b60405180910390fd5b506101ef6402540be400677fffffffffffffff6105fc565b3411156101fb34610478565b61021561018b6402540be400677fffffffffffffff6105fc565b6040516020016102269291906106bd565b604051602081830303815290604052906102535760405162461bcd60e51b81526004016101ce9190610688565b50435f8181526020819052604090205461ffff166104009081119061027790610478565b604051602001610287919061070c565b604051602081830303815290604052906102b45760405162461bcd60e51b81526004016101ce9190610688565b505f818152602081905260408120805461ffff16916102d283610786565b91906101000a81548161ffff021916908361ffff160217905550505f6402540be400346102ff91906107a6565b9050346103116402540be400836105fc565b1461031b34610478565b6103296402540be400610478565b60405160200161033a9291906107c5565b604051602081830303815290604052906103675760405162461bcd60e51b81526004016101ce9190610688565b506040515f90819034908281818185825af1925050503d805f81146103a7576040519150601f19603f3d011682016040523d82523d5f602084013e6103ac565b606091505b50509050806103fd5760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e6420746f206275726e2061646472657373000060448201526064016101ce565b604080516bffffffffffffffffffffffff1986168152600784900b60208201527ffeadaf04de8d7c2594453835b9a93b747e20e7a09a7fdb9280579a6dbaf131a8910160405180910390a150505050565b6104656402540be400677fffffffffffffff6105fc565b81565b6104656402540be40060016105fc565b6060815f0361049e5750506040805180820190915260018152600360fc1b602082015290565b815f5b81156104c757806104b181610814565b91506104c09050600a836107a6565b91506104a1565b5f8167ffffffffffffffff8111156104e1576104e161082c565b6040519080825280601f01601f19166020018201604052801561050b576020820181803683370190505b509050815b851561059557610521600182610840565b90505f61052f600a886107a6565b61053a90600a6105fc565b6105449088610840565b61054f906030610853565b90505f8160f81b90508084848151811061056b5761056b61086c565b60200101906001600160f81b03191690815f1a90535061058c600a896107a6565b97505050610510565b50949350505050565b5f602082840312156105ae575f80fd5b5035919050565b5f602082840312156105c5575f80fd5b81356bffffffffffffffffffffffff19811681146105e1575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610613576106136105e8565b92915050565b5f81518060208401855e5f93019283525090919050565b6a029b2b73a103b30b63ab2960ad1b81525f61064f600b830185610619565b7f206d7573742062652067726561746572206f7220657175616c20746f20000000815261067f601d820185610619565b95945050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6a029b2b73a103b30b63ab2960ad1b81525f6106dc600b830185610619565b7f206d757374206265206c657373206f7220657175616c20746f20000000000000815261067f601a820185610619565b7f4d6178207472616e7366657273206c696d6974206f662000000000000000000081525f61073d6017830184610619565b7f207265616368656420696e207468697320626c6f636b2e2054727920746f207381527232b732103a3930b739b332b9399030b3b0b4b760691b60208201526033019392505050565b5f61ffff821661ffff810361079d5761079d6105e8565b60010192915050565b5f826107c057634e487b7160e01b5f52601260045260245ffd5b500490565b6a029b2b73a103b30b63ab2960ad1b81525f6107e4600b830185610619565b7f206d7573742062652061206d756c7469706c65206f6620000000000000000000815261067f6017820185610619565b5f60018201610825576108256105e8565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b81810381811115610613576106136105e8565b60ff8181168382160190811115610613576106136105e8565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220106399f534da089226c14e2f183f8421d059a924c65c97d7e4f3e931c54fe1bb64736f6c634300081a0033",
    "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ncontract Bridge {\n    address public constant BURN_ADDRESS = address(0);\n\n    // 1 UNIT0(EL) = 1 UNIT0(CL)\n    // 10^18 units in 1 UNIT0(EL)\n    // 10^8  units in 1 UNIT0(CL)\n    // 10^(18-8) = UNIT0(EL) / UNIT0(CL) = ratio\n    // Conversion: N UNIT0(CL) = UNIT0(EL) / ratio\n    uint256 public constant EL_TO_CL_RATIO = 10 ** 10; // 10 * 1 Gwei = 10 Gwei\n\n    uint256 public constant MIN_AMOUNT_IN_WEI = 1 * EL_TO_CL_RATIO;\n    uint256 public constant MAX_AMOUNT_IN_WEI = uint256(uint64(type(int64).max)) * EL_TO_CL_RATIO;\n\n    uint16 public constant MAX_TRANSFERS_IN_BLOCK = 1024;\n\n    mapping(uint => uint16) public transfersPerBlock;\n\n    // wavesRecipient is a public key hash of recipient account.\n    // effectively is it Waves address without 2 first bytes (version and chain id) and last 4 bytes (checksum).\n    event SentNative(bytes20 wavesRecipient, int64 amount);\n\n    function sendNative(bytes20 wavesRecipient) external payable {\n        require(msg.value >= MIN_AMOUNT_IN_WEI, string.concat(\"Sent value \", uint2str(msg.value), \" must be greater or equal to \", uint2str(MIN_AMOUNT_IN_WEI)));\n        require(msg.value <= MAX_AMOUNT_IN_WEI, string.concat(\"Sent value \", uint2str(msg.value), \" must be less or equal to \", uint2str(MAX_AMOUNT_IN_WEI)));\n\n        uint blockNumber = block.number;\n        require(transfersPerBlock[blockNumber] < MAX_TRANSFERS_IN_BLOCK, string.concat(\"Max transfers limit of \", uint2str(uint(MAX_TRANSFERS_IN_BLOCK)), \" reached in this block. Try to send transfers again\"));\n        transfersPerBlock[blockNumber]++;\n\n        uint256 ccAmount = msg.value / EL_TO_CL_RATIO;\n        require(ccAmount * EL_TO_CL_RATIO == msg.value, string.concat(\"Sent value \", uint2str(msg.value), \" must be a multiple of \", uint2str(EL_TO_CL_RATIO)));\n\n        (bool success,) = BURN_ADDRESS.call{value: msg.value}(\"\");\n        require(success, \"Failed to send to burn address\");\n\n        emit SentNative(wavesRecipient, int64(uint64(ccAmount)));\n    }\n\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint j = _i;\n        uint len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint k = len;\n        while (_i != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\n            bytes1 b1 = bytes1(temp);\n            bstr[k] = b1;\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n}\n",
    "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"SentNative\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EL_TO_CL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFERS_IN_BLOCK\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"}],\"name\":\"sendNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfersPerBlock\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"
  },
  {
    "name": "IssuedTokenBridge",
    "address": "0x00000000000000000000000000000155c3d06a7e",
    "compiler": "v0.8.26+commit.8a97fa7a",
    "bytecode": "0x608060405234801561000f575f80fd5b5060043610610086575f3560e01c806396f396c31161005957806396f396c314610124578063b92ab41014610142578063c4a4326d1461015e578063e984df0e1461017c57610086565b806327e235e31461008a57806339dd5d1b146100ba5780635dcb1a94146100ea5780637157405a14610106575b5f80fd5b6100a4600480360381019061009f9190610963565b61019a565b6040516100b191906109a6565b60405180910390f35b6100d460048036038101906100cf91906109e9565b6101ae565b6040516100e19190610a30565b60405180910390f35b61010460048036038101906100ff9190610abc565b6101cc565b005b61010e610320565b60405161011b9190610a30565b60405180910390f35b61012c610326565b60405161013991906109a6565b60405180910390f35b61015c60048036038101906101579190610b61565b61034c565b005b610166610769565b60405161017391906109a6565b60405180910390f35b610184610772565b60405161019191906109a6565b60405180910390f35b5f602052805f5260405f205f915090505481565b6001602052805f5260405f205f915054906101000a900461ffff1681565b5f8160070b13610211576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020890610c1f565b60405180910390fd5b5f6402540be4008260070b6102269190610c6a565b90506402540be400677fffffffffffffff67ffffffffffffffff1661024b9190610c6a565b81111561028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610d1b565b60405180910390fd5b805f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102d89190610d39565b925050819055507f8b24d40088d3130df82faef2488dc4dc75125d51aa8dfd305178a5407f48756e84848360405161031293929190610d8a565b60405180910390a150505050565b61040081565b6402540be400677fffffffffffffff67ffffffffffffffff166103499190610c6a565b81565b6402540be400600161035e9190610c6a565b81101561036a82610787565b6103846402540be400600161037f9190610c6a565b610787565b604051602001610395929190610e5d565b604051602081830303815290604052906103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc9190610ee6565b60405180910390fd5b506402540be400677fffffffffffffff67ffffffffffffffff166104099190610c6a565b81111561041582610787565b6104406402540be400677fffffffffffffff67ffffffffffffffff1661043b9190610c6a565b610787565b604051602001610451929190610f2c565b604051602081830303815290604052906104a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104989190610ee6565b60405180910390fd5b505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116104ee82610787565b6040516020016104fe9190610fb9565b6040516020818303038152906040529061054e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105459190610ee6565b60405180910390fd5b505f6402540be40083610561919061101a565b9050826402540be400826105759190610c6a565b1461057f84610787565b61058d6402540be400610787565b60405160200161059e929190611070565b604051602081830303815290604052906105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e59190610ee6565b60405180910390fd5b505f43905061040061ffff1660015f8381526020019081526020015f205f9054906101000a900461ffff1661ffff161061062d61040061ffff16610787565b60405160200161063d9190611147565b6040516020818303038152906040529061068d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106849190610ee6565b60405180910390fd5b5060015f8281526020019081526020015f205f81819054906101000a900461ffff16809291906106bc90611177565b91906101000a81548161ffff021916908361ffff16021790555050835f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461072291906111a0565b925050819055507f019ed605462769fdd9cdbf54b36e801c6ff41a3fb8d9bbe64974be03492956a7858360405161075a9291906111f1565b60405180910390a15050505050565b6402540be40081565b6402540be40060016107849190610c6a565b81565b60605f82036107cd576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610900565b5f8290505f5b5f82146107fc5780806107e590611218565b915050600a826107f5919061101a565b91506107d3565b5f8167ffffffffffffffff8111156108175761081661125f565b5b6040519080825280601f01601f1916602001820160405280156108495781602001600182028036833780820191505090505b5090505f8290505b5f86146108f85760018161086591906111a0565b90505f600a8088610876919061101a565b6108809190610c6a565b8761088b91906111a0565b60306108979190611298565b90505f8160f81b9050808484815181106108b4576108b36112cc565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a886108ef919061101a565b97505050610851565b819450505050505b919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61093282610909565b9050919050565b61094281610928565b811461094c575f80fd5b50565b5f8135905061095d81610939565b92915050565b5f6020828403121561097857610977610905565b5b5f6109858482850161094f565b91505092915050565b5f819050919050565b6109a08161098e565b82525050565b5f6020820190506109b95f830184610997565b92915050565b6109c88161098e565b81146109d2575f80fd5b50565b5f813590506109e3816109bf565b92915050565b5f602082840312156109fe576109fd610905565b5b5f610a0b848285016109d5565b91505092915050565b5f61ffff82169050919050565b610a2a81610a14565b82525050565b5f602082019050610a435f830184610a21565b92915050565b5f67ffffffffffffffff82169050919050565b610a6581610a49565b8114610a6f575f80fd5b50565b5f81359050610a8081610a5c565b92915050565b5f8160070b9050919050565b610a9b81610a86565b8114610aa5575f80fd5b50565b5f81359050610ab681610a92565b92915050565b5f805f60608486031215610ad357610ad2610905565b5b5f610ae086828701610a72565b9350506020610af18682870161094f565b9250506040610b0286828701610aa8565b9150509250925092565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b610b4081610b0c565b8114610b4a575f80fd5b50565b5f81359050610b5b81610b37565b92915050565b5f8060408385031215610b7757610b76610905565b5b5f610b8485828601610b4d565b9250506020610b95858286016109d5565b9150509250929050565b5f82825260208201905092915050565b7f526563656976652076616c7565206d7573742062652067726561746572206f725f8201527f20657175616c20746f2030000000000000000000000000000000000000000000602082015250565b5f610c09602b83610b9f565b9150610c1482610baf565b604082019050919050565b5f6020820190508181035f830152610c3681610bfd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c748261098e565b9150610c7f8361098e565b9250828202610c8d8161098e565b91508282048414831517610ca457610ca3610c3d565b5b5092915050565b7f416d6f756e742065786365656473206d6178696d756d20616c6c6f7761626c655f8201527f2076616c75650000000000000000000000000000000000000000000000000000602082015250565b5f610d05602683610b9f565b9150610d1082610cab565b604082019050919050565b5f6020820190508181035f830152610d3281610cf9565b9050919050565b5f610d438261098e565b9150610d4e8361098e565b9250828201905080821115610d6657610d65610c3d565b5b92915050565b610d7581610a49565b82525050565b610d8481610928565b82525050565b5f606082019050610d9d5f830186610d6c565b610daa6020830185610d7b565b610db76040830184610997565b949350505050565b7f53656e742076616c756520000000000000000000000000000000000000000000815250565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610e1182610de5565b610e1b8185610def565b9350610e2b818560208601610df9565b80840191505092915050565b7f206d7573742062652067726561746572206f7220657175616c20746f20000000815250565b5f610e6782610dbf565b600b82019150610e778285610e07565b9150610e8282610e37565b601d82019150610e928284610e07565b91508190509392505050565b5f601f19601f8301169050919050565b5f610eb882610de5565b610ec28185610b9f565b9350610ed2818560208601610df9565b610edb81610e9e565b840191505092915050565b5f6020820190508181035f830152610efe8184610eae565b905092915050565b7f206d757374206265206c657373206f7220657175616c20746f20000000000000815250565b5f610f3682610dbf565b600b82019150610f468285610e07565b9150610f5182610f06565b601a82019150610f618284610e07565b91508190509392505050565b7f496e73756666696369656e742066756e64732c206f6e6c792000000000000000815250565b7f20617661696c61626c6500000000000000000000000000000000000000000000815250565b5f610fc382610f6d565b601982019150610fd38284610e07565b9150610fde82610f93565b600a8201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6110248261098e565b915061102f8361098e565b92508261103f5761103e610fed565b5b828204905092915050565b7f206d7573742062652061206d756c7469706c65206f6620000000000000000000815250565b5f61107a82610dbf565b600b8201915061108a8285610e07565b91506110958261104a565b6017820191506110a58284610e07565b91508190509392505050565b7f4d6178207472616e7366657273206c696d6974206f6620000000000000000000815250565b7f207265616368656420696e207468697320626c6f636b2e2054727920616761695f8201527f6e206c6174657200000000000000000000000000000000000000000000000000602082015250565b5f611131602783610def565b915061113c826110d7565b602782019050919050565b5f611151826110b1565b6017820191506111618284610e07565b915061116c82611125565b915081905092915050565b5f61118182610a14565b915061ffff820361119557611194610c3d565b5b600182019050919050565b5f6111aa8261098e565b91506111b58361098e565b92508282039050818111156111cd576111cc610c3d565b5b92915050565b6111dc81610b0c565b82525050565b6111eb81610a86565b82525050565b5f6040820190506112045f8301856111d3565b61121160208301846111e2565b9392505050565b5f6112228261098e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361125457611253610c3d565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60ff82169050919050565b5f6112a28261128c565b91506112ad8361128c565b9250828201905060ff8111156112c6576112c5610c3d565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea26469706673582212203706d58ea773b3c732361fc68b408c372b25aac5ae8935f96b3c6449026593fd64736f6c634300081a0033",
    "source": "\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.26;\\n\\ncontract IssuedTokenBridge {\\n    // See explanation in bridge.sol\\n    uint256 public constant EL_TO_CL_RATIO = 10 ** 10; // 10 * 1 Gwei = 10 Gwei\\n\\n    uint256 public constant MIN_AMOUNT_IN_WEI = 1 * EL_TO_CL_RATIO;\\n    uint256 public constant MAX_AMOUNT_IN_WEI = uint256(uint64(type(int64).max)) * EL_TO_CL_RATIO;\\n\\n    uint16 public constant MAX_TRANSFERS_IN_BLOCK = 1024;\\n\\n    mapping(address => uint256) public balances;\\n    mapping(uint => uint16) public transfersPerBlock;\\n\\n    // wavesRecipient is a public key hash of recipient account.\\n    // effectively is it Waves address without 2 first bytes (version and chain id) and last 4 bytes (checksum).\\n    event SentIssued(bytes20 wavesRecipient, int64 clAmount);\\n    event ReceivedIssued(uint64 index, address recipient, uint256 elAmount);\\n\\n    // wavesRecipient is a public key hash of recipient account.\\n    function sendIssued(bytes20 wavesRecipient, uint256 elAmount) external {\\n        require(elAmount >= MIN_AMOUNT_IN_WEI, string.concat(\\\"Sent value \\\", uint2str(elAmount), \\\" must be greater or equal to \\\", uint2str(MIN_AMOUNT_IN_WEI)));\\n        require(elAmount <= MAX_AMOUNT_IN_WEI, string.concat(\\\"Sent value \\\", uint2str(elAmount), \\\" must be less or equal to \\\", uint2str(MAX_AMOUNT_IN_WEI)));\\n\\n        uint256 balance = balances[msg.sender];\\n        require(balance > 0, string.concat(\\\"Insufficient funds, only \\\", uint2str(balance), \\\" available\\\"));\\n\\n        uint256 clAmount = elAmount / EL_TO_CL_RATIO;\\n        require(clAmount * EL_TO_CL_RATIO == elAmount, string.concat(\\\"Sent value \\\", uint2str(elAmount), \\\" must be a multiple of \\\", uint2str(EL_TO_CL_RATIO)));\\n\\n        uint blockNumber = block.number;\\n        require(transfersPerBlock[blockNumber] < MAX_TRANSFERS_IN_BLOCK, string.concat(\\\"Max transfers limit of \\\", uint2str(uint(MAX_TRANSFERS_IN_BLOCK)), \\\" reached in this block. Try again later\\\"));\\n        transfersPerBlock[blockNumber]++;\\n\\n        balances[msg.sender] -= elAmount;\\n        emit SentIssued(wavesRecipient, int64(uint64(clAmount)));\\n    }\\n\\n    function receiveIssued(uint64 index, address recipient, int64 clAmount) external {\\n        // TODO: only miner can do this\\n        require(clAmount > 0, \\\"Receive value must be greater or equal to 0\\\");\\n\\n        uint256 elAmount = uint256(int256(clAmount)) * EL_TO_CL_RATIO;\\n        require(elAmount <= MAX_AMOUNT_IN_WEI, \\\"Amount exceeds maximum allowable value\\\");\\n\\n        balances[recipient] += elAmount;\\n        emit ReceivedIssued(index, recipient, elAmount);\\n    }\\n\\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint j = _i;\\n        uint len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n}\\n\"",
    "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"elAmount\",\"type\":\"uint256\"}],\"name\":\"ReceivedIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"clAmount\",\"type\":\"int64\"}],\"name\":\"SentIssued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EL_TO_CL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFERS_IN_BLOCK\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"clAmount\",\"type\":\"int64\"}],\"name\":\"receiveIssued\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"elAmount\",\"type\":\"uint256\"}],\"name\":\"sendIssued\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfersPerBlock\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"
  }
]
