[
  {
    "name": "Bridge",
    "address": "0x0000000000000000000000000000000000006a7e",
    "compiler": "v0.8.26+commit.8a97fa7a",
    "bytecode": "0x60806040526004361061006e575f3560e01c806396f396c31161004c57806396f396c3146100e3578063c4a4326d14610105578063e984df0e1461011d578063fccc281314610131575f80fd5b806339dd5d1b146100725780637157405a146100b957806378338413146100ce575b5f80fd5b34801561007d575f80fd5b506100a161008c36600461059e565b5f6020819052908152604090205461ffff1681565b60405161ffff90911681526020015b60405180910390f35b3480156100c4575f80fd5b506100a161040081565b6100e16100dc3660046105b5565b61015c565b005b3480156100ee575f80fd5b506100f761044e565b6040519081526020016100b0565b348015610110575f80fd5b506100f76402540be40081565b348015610128575f80fd5b506100f7610468565b34801561013c575f80fd5b506101445f81565b6040516001600160a01b0390911681526020016100b0565b61016c6402540be40060016105fc565b34101561017834610478565b61019061018b6402540be40060016105fc565b610478565b6040516020016101a1929190610630565b604051602081830303815290604052906101d75760405162461bcd60e51b81526004016101ce9190610688565b60405180910390fd5b506101ef6402540be400677fffffffffffffff6105fc565b3411156101fb34610478565b61021561018b6402540be400677fffffffffffffff6105fc565b6040516020016102269291906106bd565b604051602081830303815290604052906102535760405162461bcd60e51b81526004016101ce9190610688565b50435f8181526020819052604090205461ffff166104009081119061027790610478565b604051602001610287919061070c565b604051602081830303815290604052906102b45760405162461bcd60e51b81526004016101ce9190610688565b505f818152602081905260408120805461ffff16916102d283610786565b91906101000a81548161ffff021916908361ffff160217905550505f6402540be400346102ff91906107a6565b9050346103116402540be400836105fc565b1461031b34610478565b6103296402540be400610478565b60405160200161033a9291906107c5565b604051602081830303815290604052906103675760405162461bcd60e51b81526004016101ce9190610688565b506040515f90819034908281818185825af1925050503d805f81146103a7576040519150601f19603f3d011682016040523d82523d5f602084013e6103ac565b606091505b50509050806103fd5760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e6420746f206275726e2061646472657373000060448201526064016101ce565b604080516bffffffffffffffffffffffff1986168152600784900b60208201527ffeadaf04de8d7c2594453835b9a93b747e20e7a09a7fdb9280579a6dbaf131a8910160405180910390a150505050565b6104656402540be400677fffffffffffffff6105fc565b81565b6104656402540be40060016105fc565b6060815f0361049e5750506040805180820190915260018152600360fc1b602082015290565b815f5b81156104c757806104b181610814565b91506104c09050600a836107a6565b91506104a1565b5f8167ffffffffffffffff8111156104e1576104e161082c565b6040519080825280601f01601f19166020018201604052801561050b576020820181803683370190505b509050815b851561059557610521600182610840565b90505f61052f600a886107a6565b61053a90600a6105fc565b6105449088610840565b61054f906030610853565b90505f8160f81b90508084848151811061056b5761056b61086c565b60200101906001600160f81b03191690815f1a90535061058c600a896107a6565b97505050610510565b50949350505050565b5f602082840312156105ae575f80fd5b5035919050565b5f602082840312156105c5575f80fd5b81356bffffffffffffffffffffffff19811681146105e1575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610613576106136105e8565b92915050565b5f81518060208401855e5f93019283525090919050565b6a029b2b73a103b30b63ab2960ad1b81525f61064f600b830185610619565b7f206d7573742062652067726561746572206f7220657175616c20746f20000000815261067f601d820185610619565b95945050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6a029b2b73a103b30b63ab2960ad1b81525f6106dc600b830185610619565b7f206d757374206265206c657373206f7220657175616c20746f20000000000000815261067f601a820185610619565b7f4d6178207472616e7366657273206c696d6974206f662000000000000000000081525f61073d6017830184610619565b7f207265616368656420696e207468697320626c6f636b2e2054727920746f207381527232b732103a3930b739b332b9399030b3b0b4b760691b60208201526033019392505050565b5f61ffff821661ffff810361079d5761079d6105e8565b60010192915050565b5f826107c057634e487b7160e01b5f52601260045260245ffd5b500490565b6a029b2b73a103b30b63ab2960ad1b81525f6107e4600b830185610619565b7f206d7573742062652061206d756c7469706c65206f6620000000000000000000815261067f6017820185610619565b5f60018201610825576108256105e8565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b81810381811115610613576106136105e8565b60ff8181168382160190811115610613576106136105e8565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220106399f534da089226c14e2f183f8421d059a924c65c97d7e4f3e931c54fe1bb64736f6c634300081a0033",
    "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ncontract Bridge {\n    address public constant BURN_ADDRESS = address(0);\n\n    // 1 UNIT0(EL) = 1 UNIT0(CL)\n    // 10^18 units in 1 UNIT0(EL)\n    // 10^8  units in 1 UNIT0(CL)\n    // 10^(18-8) = UNIT0(EL) / UNIT0(CL) = ratio\n    // Conversion: N UNIT0(CL) = UNIT0(EL) / ratio\n    uint256 public constant EL_TO_CL_RATIO = 10 ** 10; // 10 * 1 Gwei = 10 Gwei\n\n    uint256 public constant MIN_AMOUNT_IN_WEI = 1 * EL_TO_CL_RATIO;\n    uint256 public constant MAX_AMOUNT_IN_WEI = uint256(uint64(type(int64).max)) * EL_TO_CL_RATIO;\n\n    uint16 public constant MAX_TRANSFERS_IN_BLOCK = 1024;\n\n    mapping(uint => uint16) public transfersPerBlock;\n\n    // wavesRecipient is a public key hash of recipient account.\n    // effectively is it Waves address without 2 first bytes (version and chain id) and last 4 bytes (checksum).\n    event SentNative(bytes20 wavesRecipient, int64 amount);\n\n    function sendNative(bytes20 wavesRecipient) external payable {\n        require(msg.value >= MIN_AMOUNT_IN_WEI, string.concat(\"Sent value \", uint2str(msg.value), \" must be greater or equal to \", uint2str(MIN_AMOUNT_IN_WEI)));\n        require(msg.value <= MAX_AMOUNT_IN_WEI, string.concat(\"Sent value \", uint2str(msg.value), \" must be less or equal to \", uint2str(MAX_AMOUNT_IN_WEI)));\n\n        uint blockNumber = block.number;\n        require(transfersPerBlock[blockNumber] < MAX_TRANSFERS_IN_BLOCK, string.concat(\"Max transfers limit of \", uint2str(uint(MAX_TRANSFERS_IN_BLOCK)), \" reached in this block. Try to send transfers again\"));\n        transfersPerBlock[blockNumber]++;\n\n        uint256 ccAmount = msg.value / EL_TO_CL_RATIO;\n        require(ccAmount * EL_TO_CL_RATIO == msg.value, string.concat(\"Sent value \", uint2str(msg.value), \" must be a multiple of \", uint2str(EL_TO_CL_RATIO)));\n\n        (bool success,) = BURN_ADDRESS.call{value: msg.value}(\"\");\n        require(success, \"Failed to send to burn address\");\n\n        emit SentNative(wavesRecipient, int64(uint64(ccAmount)));\n    }\n\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint j = _i;\n        uint len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint k = len;\n        while (_i != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\n            bytes1 b1 = bytes1(temp);\n            bstr[k] = b1;\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n}\n",
    "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"amount\",\"type\":\"int64\"}],\"name\":\"SentNative\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EL_TO_CL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFERS_IN_BLOCK\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"}],\"name\":\"sendNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfersPerBlock\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"
  },
  {
    "name": "IssuedTokenBridge",
    "address": "0x00000000000000000000000000000155c3d06a7e",
    "compiler": "v0.8.26+commit.8a97fa7a",
    "bytecode": "0x608060405234801561000f575f80fd5b5060043610610086575f3560e01c806396f396c31161005957806396f396c314610124578063b92ab41014610142578063c4a4326d1461015e578063e984df0e1461017c57610086565b806327e235e31461008a57806339dd5d1b146100ba578063596a9204146100ea5780637157405a14610106575b5f80fd5b6100a4600480360381019061009f9190610960565b61019a565b6040516100b191906109a3565b60405180910390f35b6100d460048036038101906100cf91906109e6565b6101ae565b6040516100e19190610a2d565b60405180910390f35b61010460048036038101906100ff9190610a7c565b6101cc565b005b61010e61031d565b60405161011b9190610a2d565b60405180910390f35b61012c610323565b60405161013991906109a3565b60405180910390f35b61015c60048036038101906101579190610b0f565b610349565b005b610166610766565b60405161017391906109a3565b60405180910390f35b61018461076f565b60405161019191906109a3565b60405180910390f35b5f602052805f5260405f205f915090505481565b6001602052805f5260405f205f915054906101000a900461ffff1681565b5f8160070b13610211576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020890610bcd565b60405180910390fd5b5f6402540be4008260070b6102269190610c18565b90506402540be400677fffffffffffffff67ffffffffffffffff1661024b9190610c18565b81111561028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610cc9565b60405180910390fd5b805f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102d89190610ce7565b925050819055507f8083a0ca797738492a669b653c16d85198cea953856bdae93f3cbb708188b0af8383604051610310929190610d38565b60405180910390a1505050565b61040081565b6402540be400677fffffffffffffff67ffffffffffffffff166103469190610c18565b81565b6402540be400600161035b9190610c18565b81101561036782610784565b6103816402540be400600161037c9190610c18565b610784565b604051602001610392929190610dfd565b604051602081830303815290604052906103e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d99190610e86565b60405180910390fd5b506402540be400677fffffffffffffff67ffffffffffffffff166104069190610c18565b81111561041282610784565b61043d6402540be400677fffffffffffffff67ffffffffffffffff166104389190610c18565b610784565b60405160200161044e929190610ecc565b6040516020818303038152906040529061049e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104959190610e86565b60405180910390fd5b505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116104eb82610784565b6040516020016104fb9190610f59565b6040516020818303038152906040529061054b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105429190610e86565b60405180910390fd5b505f6402540be4008361055e9190610fba565b9050826402540be400826105729190610c18565b1461057c84610784565b61058a6402540be400610784565b60405160200161059b929190611010565b604051602081830303815290604052906105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e29190610e86565b60405180910390fd5b505f43905061040061ffff1660015f8381526020019081526020015f205f9054906101000a900461ffff1661ffff161061062a61040061ffff16610784565b60405160200161063a91906110e7565b6040516020818303038152906040529061068a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106819190610e86565b60405180910390fd5b5060015f8281526020019081526020015f205f81819054906101000a900461ffff16809291906106b990611117565b91906101000a81548161ffff021916908361ffff16021790555050835f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461071f9190611140565b925050819055507f019ed605462769fdd9cdbf54b36e801c6ff41a3fb8d9bbe64974be03492956a78583604051610757929190611182565b60405180910390a15050505050565b6402540be40081565b6402540be40060016107819190610c18565b81565b60605f82036107ca576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506108fd565b5f8290505f5b5f82146107f95780806107e2906111a9565b915050600a826107f29190610fba565b91506107d0565b5f8167ffffffffffffffff811115610814576108136111f0565b5b6040519080825280601f01601f1916602001820160405280156108465781602001600182028036833780820191505090505b5090505f8290505b5f86146108f5576001816108629190611140565b90505f600a80886108739190610fba565b61087d9190610c18565b876108889190611140565b60306108949190611229565b90505f8160f81b9050808484815181106108b1576108b061125d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a886108ec9190610fba565b9750505061084e565b819450505050505b919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61092f82610906565b9050919050565b61093f81610925565b8114610949575f80fd5b50565b5f8135905061095a81610936565b92915050565b5f6020828403121561097557610974610902565b5b5f6109828482850161094c565b91505092915050565b5f819050919050565b61099d8161098b565b82525050565b5f6020820190506109b65f830184610994565b92915050565b6109c58161098b565b81146109cf575f80fd5b50565b5f813590506109e0816109bc565b92915050565b5f602082840312156109fb576109fa610902565b5b5f610a08848285016109d2565b91505092915050565b5f61ffff82169050919050565b610a2781610a11565b82525050565b5f602082019050610a405f830184610a1e565b92915050565b5f8160070b9050919050565b610a5b81610a46565b8114610a65575f80fd5b50565b5f81359050610a7681610a52565b92915050565b5f8060408385031215610a9257610a91610902565b5b5f610a9f8582860161094c565b9250506020610ab085828601610a68565b9150509250929050565b5f7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b610aee81610aba565b8114610af8575f80fd5b50565b5f81359050610b0981610ae5565b92915050565b5f8060408385031215610b2557610b24610902565b5b5f610b3285828601610afb565b9250506020610b43858286016109d2565b9150509250929050565b5f82825260208201905092915050565b7f526563656976652076616c7565206d7573742062652067726561746572206f725f8201527f20657175616c20746f2030000000000000000000000000000000000000000000602082015250565b5f610bb7602b83610b4d565b9150610bc282610b5d565b604082019050919050565b5f6020820190508181035f830152610be481610bab565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c228261098b565b9150610c2d8361098b565b9250828202610c3b8161098b565b91508282048414831517610c5257610c51610beb565b5b5092915050565b7f416d6f756e742065786365656473206d6178696d756d20616c6c6f7761626c655f8201527f2076616c75650000000000000000000000000000000000000000000000000000602082015250565b5f610cb3602683610b4d565b9150610cbe82610c59565b604082019050919050565b5f6020820190508181035f830152610ce081610ca7565b9050919050565b5f610cf18261098b565b9150610cfc8361098b565b9250828201905080821115610d1457610d13610beb565b5b92915050565b610d2381610925565b82525050565b610d3281610a46565b82525050565b5f604082019050610d4b5f830185610d1a565b610d586020830184610d29565b9392505050565b7f53656e742076616c756520000000000000000000000000000000000000000000815250565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610db182610d85565b610dbb8185610d8f565b9350610dcb818560208601610d99565b80840191505092915050565b7f206d7573742062652067726561746572206f7220657175616c20746f20000000815250565b5f610e0782610d5f565b600b82019150610e178285610da7565b9150610e2282610dd7565b601d82019150610e328284610da7565b91508190509392505050565b5f601f19601f8301169050919050565b5f610e5882610d85565b610e628185610b4d565b9350610e72818560208601610d99565b610e7b81610e3e565b840191505092915050565b5f6020820190508181035f830152610e9e8184610e4e565b905092915050565b7f206d757374206265206c657373206f7220657175616c20746f20000000000000815250565b5f610ed682610d5f565b600b82019150610ee68285610da7565b9150610ef182610ea6565b601a82019150610f018284610da7565b91508190509392505050565b7f496e73756666696369656e742066756e64732c206f6e6c792000000000000000815250565b7f20617661696c61626c6500000000000000000000000000000000000000000000815250565b5f610f6382610f0d565b601982019150610f738284610da7565b9150610f7e82610f33565b600a8201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610fc48261098b565b9150610fcf8361098b565b925082610fdf57610fde610f8d565b5b828204905092915050565b7f206d7573742062652061206d756c7469706c65206f6620000000000000000000815250565b5f61101a82610d5f565b600b8201915061102a8285610da7565b915061103582610fea565b6017820191506110458284610da7565b91508190509392505050565b7f4d6178207472616e7366657273206c696d6974206f6620000000000000000000815250565b7f207265616368656420696e207468697320626c6f636b2e2054727920616761695f8201527f6e206c6174657200000000000000000000000000000000000000000000000000602082015250565b5f6110d1602783610d8f565b91506110dc82611077565b602782019050919050565b5f6110f182611051565b6017820191506111018284610da7565b915061110c826110c5565b915081905092915050565b5f61112182610a11565b915061ffff820361113557611134610beb565b5b600182019050919050565b5f61114a8261098b565b91506111558361098b565b925082820390508181111561116d5761116c610beb565b5b92915050565b61117c81610aba565b82525050565b5f6040820190506111955f830185611173565b6111a26020830184610d29565b9392505050565b5f6111b38261098b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111e5576111e4610beb565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60ff82169050919050565b5f6112338261121d565b915061123e8361121d565b9250828201905060ff81111561125757611256610beb565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea2646970667358221220a7d121f7caeab60c866c1a9d47d7537873d691e79987fe5a01bc7943a466752064736f6c634300081a0033",
    "source": "\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.26;\\n\\ncontract IssuedTokenBridge {\\n    // See explanation in bridge.sol\\n    uint256 public constant EL_TO_CL_RATIO = 10 ** 10; // 10 * 1 Gwei = 10 Gwei\\n\\n    uint256 public constant MIN_AMOUNT_IN_WEI = 1 * EL_TO_CL_RATIO;\\n    uint256 public constant MAX_AMOUNT_IN_WEI = uint256(uint64(type(int64).max)) * EL_TO_CL_RATIO;\\n\\n    uint16 public constant MAX_TRANSFERS_IN_BLOCK = 1024;\\n\\n    mapping(address => uint256) public balances;\\n    mapping(uint => uint16) public transfersPerBlock;\\n\\n    // wavesRecipient is a public key hash of recipient account.\\n    // effectively is it Waves address without 2 first bytes (version and chain id) and last 4 bytes (checksum).\\n    event SentIssued(bytes20 wavesRecipient, int64 clAmount);\\n    event ReceivedIssued(address recipient, int64 clAmount);\\n\\n    // wavesRecipient is a public key hash of recipient account.\\n    function sendIssued(bytes20 wavesRecipient, uint256 elAmount) external {\\n        require(elAmount >= MIN_AMOUNT_IN_WEI, string.concat(\\\"Sent value \\\", uint2str(elAmount), \\\" must be greater or equal to \\\", uint2str(MIN_AMOUNT_IN_WEI)));\\n        require(elAmount <= MAX_AMOUNT_IN_WEI, string.concat(\\\"Sent value \\\", uint2str(elAmount), \\\" must be less or equal to \\\", uint2str(MAX_AMOUNT_IN_WEI)));\\n\\n        uint256 balance = balances[msg.sender];\\n        require(balance > 0, string.concat(\\\"Insufficient funds, only \\\", uint2str(balance), \\\" available\\\"));\\n\\n        uint256 clAmount = elAmount / EL_TO_CL_RATIO;\\n        require(clAmount * EL_TO_CL_RATIO == elAmount, string.concat(\\\"Sent value \\\", uint2str(elAmount), \\\" must be a multiple of \\\", uint2str(EL_TO_CL_RATIO)));\\n\\n        uint blockNumber = block.number;\\n        require(transfersPerBlock[blockNumber] < MAX_TRANSFERS_IN_BLOCK, string.concat(\\\"Max transfers limit of \\\", uint2str(uint(MAX_TRANSFERS_IN_BLOCK)), \\\" reached in this block. Try again later\\\"));\\n        transfersPerBlock[blockNumber]++;\\n\\n        balances[msg.sender] -= elAmount;\\n        emit SentIssued(wavesRecipient, int64(uint64(clAmount)));\\n    }\\n\\n    function receiveIssued(address recipient, int64 clAmount) external {\\n        // TODO: only miner can do this\\n        require(clAmount > 0, \\\"Receive value must be greater or equal to 0\\\");\\n\\n        uint256 elAmount = uint256(int256(clAmount)) * EL_TO_CL_RATIO;\\n        require(elAmount <= MAX_AMOUNT_IN_WEI, \\\"Amount exceeds maximum allowable value\\\");\\n\\n        balances[recipient] += elAmount;\\n        emit ReceivedIssued(recipient, clAmount);\\n    }\\n\\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\\n        if (_i == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint j = _i;\\n        uint len;\\n        while (j != 0) {\\n            len++;\\n            j /= 10;\\n        }\\n        bytes memory bstr = new bytes(len);\\n        uint k = len;\\n        while (_i != 0) {\\n            k = k - 1;\\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\\n            bytes1 b1 = bytes1(temp);\\n            bstr[k] = b1;\\n            _i /= 10;\\n        }\\n        return string(bstr);\\n    }\\n}\\n\"",
    "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"clAmount\",\"type\":\"int64\"}],\"name\":\"ReceivedIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"clAmount\",\"type\":\"int64\"}],\"name\":\"SentIssued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EL_TO_CL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFERS_IN_BLOCK\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_AMOUNT_IN_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"clAmount\",\"type\":\"int64\"}],\"name\":\"receiveIssued\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"wavesRecipient\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"elAmount\",\"type\":\"uint256\"}],\"name\":\"sendIssued\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfersPerBlock\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"
  }
]
