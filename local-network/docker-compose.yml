name: l2
include:
  - ./configs/blockscout/blockscout.yml
services:
  ec-1:
    container_name: ec-1
    hostname: ec-1
    extends:
      file: ./configs/besu/besu.yml
      service: besu
    environment:
      NODE_NUMBER: 1
    ports:
      - "127.0.0.1:18551:8551" # Engine port - doesn't have all APIs
      - "127.0.0.1:18545:8545" # RPC port, for Metamask e.g.
      - "127.0.0.1:18546:8546" # WebSocket
    volumes:
      - ./logs/ec-1:/opt/besu/logs

  ec-2:
    container_name: ec-2
    hostname: ec-2
    extends:
      file: ./configs/op-geth/op-geth.yml
      service: op-geth
    ports:
      - "127.0.0.1:28551:8551"
      - "127.0.0.1:28545:8545"
      - "127.0.0.1:28546:8546"
    environment:
      NODE_NUMBER: 2
      GETH_CONFIG: /tmp/peers.toml
    volumes:
      - ./logs/ec-2:/opt/besu/logs
      - ./configs/ec-common/peers-geth.toml:/tmp/peers.toml
      - ./configs/ec-common/p2p-key-2.hex:/etc/secrets/p2p-key
      - ./configs/ec-common/jwt-secret-2.hex:/etc/secrets/jwtsecret

  # Make sure, you have enough RAM to run additional nodes
  # ec-3:
  #   container_name: ec-3
  #   hostname: ec-3
  #   extends:
  #     file: ./configs/besu/besu.yml
  #     service: besu
  #   environment:
  #     NODE_NUMBER: 3
  #   ports:
  #     - "127.0.0.1:38551:8551"
  #     - "127.0.0.1:38545:8545"
  #     - "127.0.0.1:38546:8546"
  #   volumes:
  #     - ./logs/ec-3:/opt/besu/logs

  # Geth is not recommended for now, because of rollback issue
  # ec-4:
  #   container_name: ec-4
  #   hostname: ec-4
  #   extends:
  #     file: ./configs/geth/geth.yml
  #     service: geth
  #   environment:
  #     NODE_NUMBER: 4
  #   ports:
  #     - "127.0.0.1:48551:8551"
  #     - "127.0.0.1:48545:8545"
  #   volumes:
  #     - ./logs/ec-4:/root/logs

  wavesnode-1:
    container_name: wavesnode-1
    hostname: wavesnode-1
    extends:
      file: ./configs/wavesnode/wavesnode.yml
      service: wavesnode
    image: ${WAVES_NODE_IMAGE_1:-${WAVES_NODE_IMAGE:-consensus-client:local}}
    ports:
      - "127.0.0.1:16869:6869"
    environment:
      NODE_NUMBER: 1
      WAVES_WALLET_SEED: HnyGuCEnV1A # devnet-1, addr: 3FNraPMYcfuGREcxorNSEBHgNLjmYtaHy9e
    volumes:
      - ./logs/wavesnode-1:/var/log/waves
    depends_on:
      ec-1:
        condition: service_healthy
      update-genesis:
        condition: service_completed_successfully

  wavesnode-2:
    container_name: wavesnode-2
    hostname: wavesnode-2
    extends:
      file: ./configs/wavesnode/wavesnode.yml
      service: wavesnode
    image: ${WAVES_NODE_IMAGE_2:-${WAVES_NODE_IMAGE:-consensus-client:local}}
    ports:
      - "127.0.0.1:26869:6869"
    environment:
      NODE_NUMBER: 2
      WAVES_WALLET_SEED: HnyGuCEnV1B # devnet-2, addr: 3FSrRN8X7cDsLyYTScS8Yf8KSwZgJBwf1jU
    volumes:
      - ./logs/wavesnode-2:/var/log/waves
    depends_on:
      ec-2:
        condition: service_healthy
      update-genesis:
        condition: service_completed_successfully

  # wavesnode-3:
  #   container_name: wavesnode-3
  #   hostname: wavesnode-3
  #   extends:
  #     file: ./configs/wavesnode/wavesnode.yml
  #     service: wavesnode
  #   image: ${WAVES_NODE_IMAGE_3:-${WAVES_NODE_IMAGE:-consensus-client:local}}
  #   ports:
  #     - "127.0.0.1:36869:6869"
  #   environment:
  #     NODE_NUMBER: 3
  #     WAVES_WALLET_SEED: HnyGuCEnV1C # devnet-3, addr: 3Fkh3dNmLS6NQtVbHcrADegwLo9DviBL5Ro
  #     JAVA_OPTS: -Dwaves.miner.enable=no
  #   volumes:
  #     - ./logs/wavesnode-3:/var/log/waves
  #   depends_on:
  #     ec-3:
  #       condition: service_healthy
  #     update-genesis:
  #       condition: service_completed_successfully

  # wavesnode-4:
  #   container_name: wavesnode-4
  #   hostname: wavesnode-4
  #   extends:
  #     file: ./configs/wavesnode/wavesnode.yml
  #     service: wavesnode
  #   image: ${WAVES_NODE_IMAGE_4:-${WAVES_NODE_IMAGE:-consensus-client:local}}
  #   ports:
  #     - "127.0.0.1:46869:6869"
  #   environment:
  #     NODE_NUMBER: 4
  #     WAVES_WALLET_SEED: HnyGuCEnV1D # devnet-4, addr: 3FXMRA1tPsn8LApkqVEQJgzsVdMBrnnd8vp
  #     JAVA_OPTS: -Dwaves.miner.enable=no
  #   volumes:
  #     - ./logs/wavesnode-4:/var/log/waves
  #   depends_on:
  #     ec-3:
  #       condition: service_healthy
  #     update-genesis:
  #       condition: service_completed_successfully

  update-genesis:
    container_name: update-genesis
    image: ${WAVES_NODE_IMAGE:-ghcr.io/wavesplatform/waves:snapshot}
    volumes:
      - ./configs/wavesnode:/tmp/configs
    command:
      - gengen
      - /tmp/configs/genesis-template.conf
      - /tmp/configs/genesis.conf

  deploy:
    container_name: deploy
    hostname: deploy
    extends:
      file: ./deploy/deploy.yml
      service: deploy
    environment:
      MAIN: deploy.py
    volumes:
      - ./logs/deploy:/var/log/deploy
    depends_on:
      wavesnode-1:
        condition: service_healthy
      ec-1:
        condition: service_healthy

  tests:
    container_name: tests
    hostname: tests
    extends:
      file: ./deploy/deploy.yml
      service: deploy
    environment:
      MAIN: tests.py
    volumes:
      - ./logs/tests:/var/log/deploy
    depends_on:
      deploy:
        condition: service_completed_successfully
    profiles: [ tests ]
