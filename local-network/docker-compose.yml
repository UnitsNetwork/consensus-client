name: l2
include:
  - ./configs/blockscout/blockscout.yml
services:
  ec-1:
    container_name: ec-1
    hostname: ec-1
    extends:
      file: ../docker/services/op-geth.yml
      service: op-geth
    environment:
      NODE_NUMBER: 1
      GETH_NETWORKID: 1337
      # config.toml doesn't have options for this, see https://github.com/ethereum/go-ethereum/issues/21492
      EXTRA_ARGS: --log.file=/root/logs/op-geth.log --verbosity=5 --log.format=terminal
    ports:
      - "127.0.0.1:18551:8551" # Engine port - doesn't have all APIs
      - "127.0.0.1:18545:8545" # RPC port, for Metamask e.g.
      - "127.0.0.1:18546:8546" # WebSocket
    volumes:
      - ./logs/ec-1:/root/logs
      - ./configs/ec-common/p2p-key-1.hex:/etc/secrets/p2p-key:ro
      - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
      - ./configs/ec-common/peers.toml:/etc/config.toml:ro
      - ./configs/ec-common/genesis.json:/tmp/genesis.json:ro

  # TODO: Until fixed an issue with rollback
  # ec-2:
  #   container_name: ec-2
  #   hostname: ec-2
  #   extends:
  #     file: ../docker/services/op-geth.yml
  #     service: op-geth
  #   environment:
  #     NODE_NUMBER: 2
  #     GETH_NETWORKID: 1337
  #     EXTRA_ARGS: --log.file=/root/logs/op-geth.log --verbosity=5 --log.format=terminal
  #   ports:
  #     - "127.0.0.1:28551:8551" # Engine port - doesn't have all APIs
  #     - "127.0.0.1:28545:8545" # RPC port, for Metamask e.g.
  #     - "127.0.0.1:28546:8546" # WebSocket
  #   volumes:
  #     - ./logs/ec-2:/root/logs
  #     - ./configs/ec-common/p2p-key-2.hex:/etc/secrets/p2p-key:ro
  #     - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
  #     - ./configs/ec-common/peers.toml:/etc/config.toml:ro
  #     - ./configs/ec-common/genesis.json:/tmp/genesis.json:ro

  # Make sure, you have enough RAM to run additional nodes
  # ec-3:
  #   container_name: ec-3
  #   hostname: ec-3
  #   extends:
  #     file: ../docker/services/op-geth.yml
  #     service: op-geth
  #   environment:
  #     NODE_NUMBER: 3
  #     GETH_NETWORKID: 1337
  #     EXTRA_ARGS: --log.file=/root/logs/op-geth.log --verbosity=5 --log.format=terminal
  #   ports:
  #     - "127.0.0.1:38551:8551" # Engine port - doesn't have all APIs
  #     - "127.0.0.1:38545:8545" # RPC port, for Metamask e.g.
  #     - "127.0.0.1:38546:8546" # WebSocket
  #   volumes:
  #     - ./logs/ec-3:/root/logs
  #     - ./configs/ec-common/p2p-key-3.hex:/etc/secrets/p2p-key:ro
  #     - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
  #     - ./configs/ec-common/peers.toml:/etc/config.toml:ro
  #     - ./configs/ec-common/genesis.json:/tmp/genesis.json:ro

  # ec-4:
  #   container_name: ec-4
  #   hostname: ec-4
  #   extends:
  #     file: ../docker/services/op-geth.yml
  #     service: op-geth
  #   environment:
  #     NODE_NUMBER: 4
  #     GETH_NETWORKID: 1337
  #     EXTRA_ARGS: --log.file=/root/logs/op-geth.log --verbosity=5 --log.format=terminal
  #   ports:
  #     - "127.0.0.1:48551:8551" # Engine port - doesn't have all APIs
  #     - "127.0.0.1:48545:8545" # RPC port, for Metamask e.g.
  #     - "127.0.0.1:48546:8546" # WebSocket
  #   volumes:
  #     - ./logs/ec-4:/root/logs
  #     - ./configs/ec-common/p2p-key-4.hex:/etc/secrets/p2p-key:ro
  #     - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
  #     - ./configs/ec-common/peers.toml:/etc/config.toml:ro
  #     - ./configs/ec-common/genesis.json:/tmp/genesis.json:ro

  waves-node-1:
    container_name: waves-node-1
    hostname: waves-node-1
    image: ${WAVES_NODE_IMAGE_1:-${WAVES_NODE_IMAGE:-consensus-client:local}}
    ports:
      - "127.0.0.1:16869:6869"
    environment:
      JAVA_OPTS: -Dlogback.file.level=TRACE ${JAVA_OPTS:-}
      NODE_NUMBER: 1
      WAVES_WALLET_SEED: HnyGuCEnV1A # devnet-1, addr: 3FNraPMYcfuGREcxorNSEBHgNLjmYtaHy9e
    volumes:
      - ./logs/waves-node-1:/var/log/waves
      - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
      - ./configs/wavesnode:/etc/waves:ro
    depends_on:
      ec-1:
        condition: service_healthy
      update-genesis:
        condition: service_completed_successfully

  # TODO: Until fixed an issue with rollback
  # waves-node-2:
  #   container_name: waves-node-2
  #   hostname: waves-node-2
  #   image: ${WAVES_NODE_IMAGE_2:-${WAVES_NODE_IMAGE:-consensus-client:local}}
  #   ports:
  #     - "127.0.0.1:26869:6869"
  #   environment:
  #     NODE_NUMBER: 2
  #     WAVES_WALLET_SEED: HnyGuCEnV1B # devnet-2, addr: 3FSrRN8X7cDsLyYTScS8Yf8KSwZgJBwf1jU
  #   volumes:
  #     - ./logs/waves-node-2:/var/log/waves
  #     - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
  #     - ./configs/wavesnode:/etc/waves:ro
  #   depends_on:
  #     ec-2:
  #       condition: service_healthy
  #     update-genesis:
  #       condition: service_completed_successfully

  # waves-node-3:
  #   container_name: waves-node-3
  #   hostname: waves-node-3
  #   image: ${WAVES_NODE_IMAGE_3:-${WAVES_NODE_IMAGE:-consensus-client:local}}
  #   ports:
  #     - "127.0.0.1:36869:6869"
  #   environment:
  #     NODE_NUMBER: 3
  #     WAVES_WALLET_SEED: HnyGuCEnV1C # devnet-3, addr: 3Fkh3dNmLS6NQtVbHcrADegwLo9DviBL5Ro
  #     JAVA_OPTS: -Dwaves.miner.enable=no
  #   volumes:
  #     - ./logs/waves-node-3:/var/log/waves
  #     - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
  #     - ./configs/wavesnode:/etc/waves:ro
  #   depends_on:
  #     ec-3:
  #       condition: service_healthy
  #     update-genesis:
  #       condition: service_completed_successfully

  # waves-node-4:
  #   container_name: waves-node-4
  #   hostname: waves-node-4
  #   image: ${WAVES_NODE_IMAGE_4:-${WAVES_NODE_IMAGE:-consensus-client:local}}
  #   ports:
  #     - "127.0.0.1:46869:6869"
  #   environment:
  #     NODE_NUMBER: 4
  #     WAVES_WALLET_SEED: HnyGuCEnV1D # devnet-4, addr: 3FXMRA1tPsn8LApkqVEQJgzsVdMBrnnd8vp
  #     JAVA_OPTS: -Dwaves.miner.enable=no
  #   volumes:
  #     - ./logs/waves-node-4:/var/log/waves
  #     - ./configs/ec-common/jwtsecret.hex:/etc/secrets/jwtsecret:ro
  #     - ./configs/wavesnode:/etc/waves:ro
  #   depends_on:
  #     ec-3:
  #       condition: service_healthy
  #     update-genesis:
  #       condition: service_completed_successfully

  update-genesis:
    container_name: update-genesis
    image: ${WAVES_NODE_IMAGE:-ghcr.io/wavesplatform/waves:snapshot}
    environment:
      JAVA_OPTS: ${JAVA_OPTS:-}
    volumes:
      - ./configs/wavesnode:/tmp/configs
    command:
      - gengen
      - /tmp/configs/genesis-template.conf
      - /tmp/configs/genesis.conf

  deploy:
    container_name: deploy
    hostname: deploy
    extends:
      file: ./deploy/deploy.yml
      service: deploy
    environment:
      MAIN: deploy.py
    volumes:
      - ./logs/deploy:/var/log/deploy
    depends_on:
      waves-node-1:
        condition: service_healthy
      ec-1:
        condition: service_healthy

  tests:
    container_name: tests
    hostname: tests
    extends:
      file: ./deploy/deploy.yml
      service: deploy
    environment:
      MAIN: tests.py
    volumes:
      - ./logs/tests:/var/log/deploy
    depends_on:
      deploy:
        condition: service_completed_successfully
    profiles: [ tests ]
